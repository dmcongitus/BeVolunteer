{"ast":null,"code":"import _regeneratorRuntime from \"/home/minhcong/Desktop/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/minhcong/Desktop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as actionTypes from '../constants/actionTypes';\nimport { storeUserData, setToken } from '../utils/localStorage';\nimport * as authServices from '../services/auth.service';\nimport * as meServices from '../services/me.service';\nexport function logInUser(username, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _ref2, _ref2$data, token, user;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return authServices.loginUser(username, password);\n\n              case 3:\n                _ref2 = _context.sent;\n                _ref2$data = _ref2.data;\n                token = _ref2$data.token;\n                user = _ref2$data.user;\n                setToken(token);\n                storeUserData(user);\n                dispatch({\n                  type: actionTypes.LOGIN_USER_SUCCESSFUL,\n                  payload: {\n                    token: token,\n                    user: user\n                  }\n                });\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                dispatch({\n                  type: actionTypes.LOGIN_USER_FAILED\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function logOutUser() {\n  localStorage.clear();\n  return {\n    type: actionTypes.LOGOUT_USER\n  };\n}\nexport function updateUser(username, userInfo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var _ref4, newUserInfo;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return meServices.updateUserInfo(username, userInfo);\n\n              case 3:\n                _ref4 = _context2.sent;\n                newUserInfo = _ref4.data;\n                storeUserData(newUserInfo);\n                dispatch({\n                  type: actionTypes.UPDATE_USER_INFO,\n                  payload: newUserInfo\n                });\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/home/minhcong/Desktop/client/src/actions/auth.action.js"],"names":["actionTypes","storeUserData","setToken","authServices","meServices","logInUser","username","password","dispatch","loginUser","data","token","user","type","LOGIN_USER_SUCCESSFUL","payload","console","log","LOGIN_USER_FAILED","logOutUser","localStorage","clear","LOGOUT_USER","updateUser","userInfo","updateUserInfo","newUserInfo","UPDATE_USER_INFO"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,0BAA7B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,uBAAxC;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;AAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEyCL,YAAY,CAACM,SAAb,CAAuBH,QAAvB,EAAiCC,QAAjC,CAFzC;;AAAA;AAAA;AAAA,mCAESG,IAFT;AAEiBC,gBAAAA,KAFjB,cAEiBA,KAFjB;AAEwBC,gBAAAA,IAFxB,cAEwBA,IAFxB;AAICV,gBAAAA,QAAQ,CAACS,KAAD,CAAR;AACAV,gBAAAA,aAAa,CAACW,IAAD,CAAb;AACAJ,gBAAAA,QAAQ,CAAC;AAAEK,kBAAAA,IAAI,EAAEb,WAAW,CAACc,qBAApB;AAA2CC,kBAAAA,OAAO,EAAE;AAAEJ,oBAAAA,KAAK,EAALA,KAAF;AAASC,oBAAAA,IAAI,EAAJA;AAAT;AAApD,iBAAD,CAAR;AAND;AAAA;;AAAA;AAAA;AAAA;AAQCI,gBAAAA,OAAO,CAACC,GAAR;AACAT,gBAAAA,QAAQ,CAAC;AAAEK,kBAAAA,IAAI,EAAEb,WAAW,CAACkB;AAApB,iBAAD,CAAR;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYH;AAED,OAAO,SAASC,UAAT,GAAsB;AACzBC,EAAAA,YAAY,CAACC,KAAb;AACA,SAAO;AAAER,IAAAA,IAAI,EAAEb,WAAW,CAACsB;AAApB,GAAP;AACH;AAED,OAAO,SAASC,UAAT,CAAoBjB,QAApB,EAA8BkB,QAA9B,EAAwC;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAgBhB,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEqCJ,UAAU,CAACqB,cAAX,CAA0BnB,QAA1B,EAAoCkB,QAApC,CAFrC;;AAAA;AAAA;AAEeE,gBAAAA,WAFf,SAEShB,IAFT;AAICT,gBAAAA,aAAa,CAACyB,WAAD,CAAb;AACAlB,gBAAAA,QAAQ,CAAC;AAAEK,kBAAAA,IAAI,EAAEb,WAAW,CAAC2B,gBAApB;AAAsCZ,kBAAAA,OAAO,EAAEW;AAA/C,iBAAD,CAAR;AALD;AAAA;;AAAA;AAAA;AAAA;AAOCV,gBAAAA,OAAO,CAACC,GAAR;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUH","sourcesContent":["import * as actionTypes from '../constants/actionTypes';\nimport { storeUserData, setToken } from '../utils/localStorage';\nimport * as authServices from '../services/auth.service';\nimport * as meServices from '../services/me.service';\n\nexport function logInUser(username, password) {\n    return async function (dispatch) {\n        try {\n            const { data: { token, user } } = await authServices.loginUser(username, password);\n\n            setToken(token);\n            storeUserData(user);\n            dispatch({ type: actionTypes.LOGIN_USER_SUCCESSFUL, payload: { token, user } });\n        } catch (e) {\n            console.log(e);\n            dispatch({ type: actionTypes.LOGIN_USER_FAILED });\n        }\n    }\n}\n\nexport function logOutUser() {\n    localStorage.clear();\n    return { type: actionTypes.LOGOUT_USER };\n}\n\nexport function updateUser(username, userInfo) {\n    return async function (dispatch) {\n        try {\n            const { data: newUserInfo } = await meServices.updateUserInfo(username, userInfo);\n\n            storeUserData(newUserInfo);\n            dispatch({ type: actionTypes.UPDATE_USER_INFO, payload: newUserInfo });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}